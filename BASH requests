Основы линукс Введение в bash
httpslinuxgeeks.rubash-intro.htm

$ git --version
$ git config --global user.name Tatiana
$ git config --global user.email taty@gmail.com
$ git config --global color.ui auto
$ git config --list #see setted config-s
use Q to get out of (END)

cd - change directory
cd .. - one level up
cd ../.. - two level up
ls - list #all files in the directory

mkdir TestDir #make directory
$ touch test.txt #create file
$ cp test.txt text_copy.txt #make a copy of ... as ...
$ mv test.txt test_original.txt #move (rename) a copy of ... as ...
$ echo 'Hello' > test_original.txt #write a text into file
$ cat test_original.txt #read text inside file

$ rm text_copy.txt #remove (delete) file
$ rm -rf yes TestDir # == delete an NOT empty directory !a recursive force
$ rm -R Test # == delete an NOT empty directory !a recursive force
$ rmdir Test #remove an empty directory



REPOSITORY
$ git init #Initialized empty Git repository in C:/Users/user/Desktop/repo/.git/
$ ls -a #shows a hidden objects
./  ../  .git/
$ git status # files: RED (not commited, but added to rep.), GREEN (commited)
On branch master #we here
No commits yet
nothing to commit (create/copy files and use "git add" to track)

$ git remote add origin https://github.com/TatiOz/repo-github.git #add a link from git into local repository

$ git remote -v #show list of remote conections
origin  https://github.com/TatiOz/repo-github.git (fetch)
origin  https://github.com/TatiOz/repo-github.git (push)

1) $ git add <file> #to add to rep.
$ git restore --staged <file> #to unstage file

2) 
$ git commit 
  +write message with :wq at the end??
$ git commit -m'commit message' -write a commit without redactor

1+2) git commit -am 'commit message' (git commit + git add + message)

$ touch images/.gitkeep #make a hidden file in folder visible

$ ls -a images
./  ../  .gitkeep
and after that images RED

$ touch .gitignore #file with ignored for adding index (commitment?)
$ echo 'config' > .gitignore #add name of file into .gitignore



#HISTORY
$ git log #to see commits change history + comments
$ git log --oneline #compact version
$ git reflog #to see commits change history + OTHER changes (del, reset, cancel)+ comments

$ git reset 0d1c1c9 #we go back to the chosen commit
$ git revert 5c349f3 #create a new commit which canceled actions made in the previous commit

























